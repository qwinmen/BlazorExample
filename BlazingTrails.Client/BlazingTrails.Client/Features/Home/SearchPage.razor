@page "/search/{SearchTerm}"
@inject HttpClient Http
@inject NavigationManager NavManager

<PageTitle>Search Trails - Blazing Trails</PageTitle>
<nav aria-label="breadcrumb">
	<ol class="breadcrumb">
		<li class="breadcrumb-item">
			<a href="/">Home</a>
		</li>
        <li class="breadcrumb-item active" aria-current="page">Search</li>
	</ol>
</nav>

<h3 class="mt-5 mb-4">Результаты поиска: "@SearchTerm"</h3>
@if (_searchResults == null)
{
    <p>Loading search results...</p>
}
else
{
	<TrailDetails Trail="_selectedTrail" />
	<div class="grid">
        @foreach (var trail in _searchResults)
        {
	        <TrailCard Trail="trail" OnSelected="HandleTrailSelected" />
        }
	</div>
}

@code
{
	private IEnumerable<Trail>? _searchResults;
	private Trail? _selectedTrail;

    [Parameter]
	public string SearchTerm { get; set; } = default!;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			IEnumerable<Trail>? allTrails = await Http.GetFromJsonAsync<IEnumerable<Trail>>("trails/trail-data.json");
			_searchResults = allTrails!.Where(x => x.Name.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase)
				|| x.Location.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase));
		}
		catch (HttpRequestException exception)
		{
			Console.WriteLine(exception.Message);
			throw;
		}
	}

	private void HandleTrailSelected(Trail trail)
	{
		_selectedTrail = trail;
	}
}
